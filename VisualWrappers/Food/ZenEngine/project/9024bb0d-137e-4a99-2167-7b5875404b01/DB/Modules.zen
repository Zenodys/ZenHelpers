{"StartSend":{"ELEMENT_PROPERTIES":{"DEPENDENCIES":"","ACTIVE":"1","REPEATABLE":"1"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenStart#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"StartSend","ELEMENT_ID":"33202233","UNREGISTER_EVENT":"0"},"Start":{"ELEMENT_PROPERTIES":{"DEPENDENCIES":"","ACTIVE":"1","REPEATABLE":"1"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenStart#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"Start","ELEMENT_ID":"10010132","UNREGISTER_EVENT":"0"},"Sleep":{"ELEMENT_PROPERTIES":{"SLEEP_TIME":"20000"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenSleep#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"Sleep","ELEMENT_ID":"23000200","UNREGISTER_EVENT":"0"},"Send":{"ELEMENT_PROPERTIES":{"DO_DEBUG":"1","METHOD":"POST","CONVERT_TO_JSON_OBJECT":"0","ACCEPT":"application/json","HAS_RESPONSE":"1","HTTP_HEADERS":"","URL":"https://api\u0026period;zenodys\u0026period;com/api/ico","CONTENT_TYPE":"application/json","HTTP_BODY":"return\n\n            \u0026quot;{\u0026quot; +\n            \u0026quot;\u0026#92;\u0026quot;Address\u0026#92;\u0026quot;:\u0026#92;\u0026quot;\u0026quot; + System\u0026period;IO\u0026period;File\u0026period;ReadAllText(\u0026quot;address\u0026quot;) +\u0026quot;\u0026#92;\u0026quot;\u0026comma;\u0026quot; +\n\u0026quot;\u0026#92;\u0026quot;CaseID\u0026#92;\u0026quot;:1\u0026comma;\u0026quot; +\n\u0026quot;\u0026#92;\u0026quot;CaseContent\u0026#92;\u0026quot;:\u0026#92;\u0026quot;\u0026quot; +\n\u0026lt;result\u0026gt;SystemInfo\u0026lt;/result\u0026gt;\u0026period;Replace(\u0026quot;\u0026#92;r\u0026#92;n\u0026quot;\u0026comma; \u0026quot; \u0026quot;)\n          \u0026period;Replace(\u0026quot;\u0026#92;r\u0026quot;\u0026comma; \u0026quot; \u0026quot;)\n          \u0026period;Replace(\u0026quot;\u0026#92;n\u0026quot;\u0026comma; \u0026quot; \u0026quot;)\n          \u0026period;Replace(\u0026quot;\u0026#92;\u0026#92;\u0026quot;\u0026comma; \u0026quot;\u0026#92;\u0026#92;\u0026#92;\u0026#92;\u0026quot;)\n          \u0026period;Replace(\u0026quot;\u0026#92;\u0026quot;\u0026quot;\u0026comma; \u0026quot;\u0026#92;\u0026#92;\u0026#92;\u0026quot;\u0026quot;) + \u0026quot;\u0026#92;\u0026quot;\u0026quot; +\n\u0026quot;}\u0026quot;;","REQUEST_CONTENT_TYPE":"STRING"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenHttpRequestWrapper#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"Send","ELEMENT_ID":"22002013","UNREGISTER_EVENT":"0"},"WebServer":{"ELEMENT_PROPERTIES":{"AUTHENTICATION_CODE":"","BASE_URI":"http://localhost:9999","LOGOUT_REDIRECTED_URL":"~/","LOGIN_REDIRECTED_URL":"~/partlysecure/secured","LOGOUT_PATH":"/logout","LOGIN_PATH":"/login","__BUFFER_TRIGGERS__":"","AUTHENTICATION":"0","VIEWS_ROOT":"nancy","__EVENTS_BUFFER_LENGTH__":"1000","LOGIN_VIEW_NAME":"login","NANCY_MODULE":"//-------------------------------------------------------------------------\n// \u0026lt;auto-generated\u0026gt;\n// This code was generated by Zeno orchestration engine\n// \u0026lt;auto-generated\u0026gt;\n//-------------------------------------------------------------------------\n\nusing Microsoft\u0026period;AspNetCore\u0026period;Mvc;\nusing Microsoft\u0026period;AspNetCore\u0026period;Mvc\u0026period;Abstractions;\nusing Microsoft\u0026period;AspNetCore\u0026period;Mvc\u0026period;ActionConstraints;\nusing Microsoft\u0026period;AspNetCore\u0026period;Mvc\u0026period;Controllers;\nusing Microsoft\u0026period;AspNetCore\u0026period;Routing;\nusing System;\nusing Newtonsoft\u0026period;Json;\nusing Newtonsoft\u0026period;Json\u0026period;Linq;\nusing System\u0026period;Collections\u0026period;Generic;\n\npublic class ApiController : Controller\n{\n    public string execNode(string nodeId)\n    {\n        ZenSystem\u0026period;exec(nodeId);\n        Console\u0026period;WriteLine(\u0026quot;Exected \u0026quot; + nodeId);\n        return \u0026quot;0\u0026quot;;\n    }\n\n    public string getNodeResult(string nodeId\u0026comma; string jsonPath\u0026comma; string isTable\u0026comma; string nodeDependency)\n    {\n                    string json = string\u0026period;Empty;\n            if (nodeDependency\u0026period;ToString() != \u0026quot;null\u0026quot;)\n            {\n                foreach(string element in nodeDependency\u0026period;ToString()\u0026period;Split(\u0026apos;$\u0026apos;))\n                {\n                    if (!string\u0026period;IsNullOrEmpty(element\u0026period;Trim()))\n                        ZenSystem\u0026period;exec(element\u0026period;Trim());\n                }\n            }\n\n\t\t\tobject nodeResult = ZenSystem\u0026period;get_result(nodeId);\n            if (nodeResult == null)\n                return \u0026quot;null\u0026quot;;\n\n            if (nodeResult\u0026period;GetType()\u0026period;Name != \u0026quot;Double[]\u0026quot; \u0026amp;\u0026amp; nodeResult\u0026period;GetType()\u0026period;Name != \u0026quot;String\u0026quot; \u0026amp;\u0026amp; nodeResult\u0026period;GetType()\u0026period;Name != \u0026quot;DataSet\u0026quot; \u0026amp;\u0026amp; nodeResult\u0026period;GetType()\u0026period;Name != \u0026quot;DataTable\u0026quot;)\n\t\t\t\treturn \u0026quot;{\u0026#92;\u0026quot;y\u0026#92;\u0026quot;:[\u0026quot; +nodeResult\u0026period;ToString()\u0026period;Replace(\u0026apos;\u0026comma;\u0026apos;\u0026comma; \u0026apos;\u0026period;\u0026apos;) + \u0026quot;]}\u0026quot;;\n\n            JObject jobject = null;\n            if (nodeResult\u0026period;GetType()\u0026period;Name == \u0026quot;String\u0026quot;)\n\t\t\t    jobject = JObject\u0026period;Parse(nodeResult\u0026period;ToString());\n            else if (nodeResult\u0026period;GetType()\u0026period;Name == \u0026quot;Double[]\u0026quot;)\n                return JsonConvert\u0026period;SerializeObject(nodeResult);\n            else\n                jobject = JObject\u0026period;Parse(JsonConvert\u0026period;SerializeObject(nodeResult));\n\n            if (isTable\u0026period;ToString() == \u0026quot;1\u0026quot;)\n            {\n                string firstKey = string\u0026period;Empty;\n                IEnumerable\u0026lt;JToken\u0026gt; tokens = jobject\u0026period;SelectTokens(jsonPath\u0026period;ToString());\n                foreach (JToken item in tokens)\n                {\n                    string key = item\u0026period;Parent\u0026period;Path\u0026period;Substring(item\u0026period;Parent\u0026period;Path\u0026period;LastIndexOf(\u0026apos;\u0026period;\u0026apos;) +1);\n                    if (string\u0026period;IsNullOrEmpty(firstKey))\n                        firstKey = key;\n\n                    if (firstKey == key \u0026amp;\u0026amp; json != \u0026quot;\u0026quot;)\n                        json =  json\u0026period;Substring(0\u0026comma; json\u0026period;LastIndexOf(\u0026apos;\u0026comma;\u0026apos;)) + \u0026quot;}\u0026comma;\u0026quot;;\n\n                    string prefix = \u0026quot;\u0026quot;;\n                    if (firstKey == key)\n                        prefix = \u0026quot;{\u0026quot;;\n\n                    json += prefix +item\u0026period;Parent\u0026period;ToString() + \u0026quot;\u0026comma;\u0026quot;;\n                }\n                json = \u0026quot;[\u0026quot; +json\u0026period;Substring(0\u0026comma; json\u0026period;LastIndexOf(\u0026apos;\u0026comma;\u0026apos;)) + \u0026quot;}]\u0026quot;;\n            }\n\t\t\telse\n\t\t\t{\n\t\t\t\tJToken token = jobject\u0026period;SelectToken(jsonPath\u0026period;ToString())\u0026period;Parent\u0026period;ToString();\n\t\t\t\tjson =  nodeResult\u0026period;GetType()\u0026period;Name != \u0026quot;String\u0026quot; ? token\u0026period;ToString(): \u0026quot;{\u0026quot; +token\u0026period;ToString() + \u0026quot;}\u0026quot;;\n\t\t\t}\n            return json;\n    }\n\n}\n\npublic class HomeController : Controller\n{\n    public IActionResult Index()\n    {\n        ViewData[\u0026quot;Message\u0026quot;] = \u0026quot;Index page\u0026quot;;\n        return View();\n    }\n}\n\n\n"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenWebServerWrapper#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"WebServer","ELEMENT_ID":"21233101","UNREGISTER_EVENT":"0"},"SystemInfo":{"ELEMENT_PROPERTIES":{"AVAILABLE_MEMORY_UNIT":"KB","USER_TIME_ACTIVE":"1","AVAILABLE_MEMORY_UNIT_ACTIVE":"1","PRIVILEGED_TIME_ACTIVE":"1","PROCESSOR_TIME_ACTIVE":"1"},"DO_DEBUG":"0","IMPLEMENTATION":"ZenGwSystemInfoWrapper#0#","TIMEOUT":"0","START_TRIGGERS":null,"OPERATOR":"||","POOLING_INTERVAL":"0","IS_SHARED":"0","ELEMENT_NAME":"SystemInfo","ELEMENT_ID":"22303013","UNREGISTER_EVENT":"0"}}